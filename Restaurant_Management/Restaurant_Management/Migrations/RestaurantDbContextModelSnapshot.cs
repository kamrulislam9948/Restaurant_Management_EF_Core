// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant_Management.Models;

#nullable disable

namespace Restaurant_Management.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant_Management.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Category = 1,
                            Description = "ABC1",
                            FoodName = "Product 1",
                            IsAvailable = true,
                            Picture = "1.jpg",
                            Price = 1147.00m
                        },
                        new
                        {
                            FoodId = 2,
                            Category = 3,
                            Description = "ABC2",
                            FoodName = "Product 2",
                            IsAvailable = true,
                            Picture = "2.jpg",
                            Price = 1024.00m
                        },
                        new
                        {
                            FoodId = 3,
                            Category = 1,
                            Description = "ABC3",
                            FoodName = "Product 3",
                            IsAvailable = true,
                            Picture = "3.jpg",
                            Price = 1694.00m
                        },
                        new
                        {
                            FoodId = 4,
                            Category = 1,
                            Description = "ABC4",
                            FoodName = "Product 4",
                            IsAvailable = true,
                            Picture = "4.jpg",
                            Price = 1611.00m
                        },
                        new
                        {
                            FoodId = 5,
                            Category = 3,
                            Description = "ABC5",
                            FoodName = "Product 5",
                            IsAvailable = true,
                            Picture = "5.jpg",
                            Price = 1505.00m
                        });
                });

            modelBuilder.Entity("Restaurant_Management.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    b.HasIndex("FoodId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Address = "Address 1",
                            CustomerName = "Customer 1",
                            Email = "customer1@example.com",
                            FoodId = 1,
                            OrderDate = new DateTime(2022, 7, 3, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(3932),
                            Phone = 154592960,
                            Quantity = 119,
                            TotalAmount = 1720.00m
                        },
                        new
                        {
                            OrderId = 2,
                            Address = "Address 2",
                            CustomerName = "Customer 2",
                            Email = "customer2@example.com",
                            FoodId = 2,
                            OrderDate = new DateTime(2022, 9, 20, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(3969),
                            Phone = 537150046,
                            Quantity = 285,
                            TotalAmount = 1704.00m
                        },
                        new
                        {
                            OrderId = 3,
                            Address = "Address 3",
                            CustomerName = "Customer 3",
                            Email = "customer3@example.com",
                            FoodId = 3,
                            OrderDate = new DateTime(2022, 8, 23, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(3983),
                            Phone = 816122558,
                            Quantity = 241,
                            TotalAmount = 1951.00m
                        },
                        new
                        {
                            OrderId = 4,
                            Address = "Address 4",
                            CustomerName = "Customer 4",
                            Email = "customer4@example.com",
                            FoodId = 4,
                            OrderDate = new DateTime(2022, 10, 11, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(3995),
                            Phone = 266450887,
                            Quantity = 242,
                            TotalAmount = 1111.00m
                        },
                        new
                        {
                            OrderId = 5,
                            Address = "Address 5",
                            CustomerName = "Customer 5",
                            Email = "customer5@example.com",
                            FoodId = 5,
                            OrderDate = new DateTime(2022, 9, 16, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(4008),
                            Phone = 463968587,
                            Quantity = 203,
                            TotalAmount = 1058.00m
                        },
                        new
                        {
                            OrderId = 6,
                            Address = "Address 6",
                            CustomerName = "Customer 6",
                            Email = "customer6@example.com",
                            FoodId = 1,
                            OrderDate = new DateTime(2022, 5, 27, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(4022),
                            Phone = 852215886,
                            Quantity = 143,
                            TotalAmount = 1870.00m
                        },
                        new
                        {
                            OrderId = 7,
                            Address = "Address 7",
                            CustomerName = "Customer 7",
                            Email = "customer7@example.com",
                            FoodId = 2,
                            OrderDate = new DateTime(2022, 7, 25, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(4035),
                            Phone = 321986724,
                            Quantity = 266,
                            TotalAmount = 1913.00m
                        },
                        new
                        {
                            OrderId = 8,
                            Address = "Address 8",
                            CustomerName = "Customer 8",
                            Email = "customer8@example.com",
                            FoodId = 3,
                            OrderDate = new DateTime(2022, 7, 20, 1, 51, 33, 646, DateTimeKind.Local).AddTicks(4058),
                            Phone = 970684855,
                            Quantity = 246,
                            TotalAmount = 1095.00m
                        });
                });

            modelBuilder.Entity("Restaurant_Management.Models.Order", b =>
                {
                    b.HasOne("Restaurant_Management.Models.Food", "Food")
                        .WithMany("Orders")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Restaurant_Management.Models.Food", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
